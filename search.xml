<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>二叉树的前序、中序、后序三种遍历</title>
      <link href="/2019/07/30/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E3%80%81%E4%B8%AD%E5%BA%8F%E3%80%81%E5%90%8E%E5%BA%8F%E4%B8%89%E7%A7%8D%E9%81%8D%E5%8E%86/"/>
      <url>/2019/07/30/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E3%80%81%E4%B8%AD%E5%BA%8F%E3%80%81%E5%90%8E%E5%BA%8F%E4%B8%89%E7%A7%8D%E9%81%8D%E5%8E%86/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数据结构 二叉树 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用两个栈来实现一个队列，完成队列的Push和Pop操作</title>
      <link href="/2019/07/30/%E4%BD%BF%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E6%9D%A5%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%98%9F%E5%88%97%EF%BC%8C%E5%AE%8C%E6%88%90%E9%98%9F%E5%88%97%E7%9A%84Push%E5%92%8CPop%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/07/30/%E4%BD%BF%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E6%9D%A5%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%98%9F%E5%88%97%EF%BC%8C%E5%AE%8C%E6%88%90%E9%98%9F%E5%88%97%E7%9A%84Push%E5%92%8CPop%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>如何使用两个栈来实现一个队列，完成队列的 Push 和 Pop 操作呢？</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>栈的特性：先进后出<br><img src="https://github.com/LxyoryxL/All-Img/blob/master/lxy17761018921.github.io-img/%E4%BD%BF%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E6%9D%A5%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%98%9F%E5%88%97/%E6%A0%88.png?raw=true" alt></p><p>队列的特性： 先进先出<br><img src="https://raw.githubusercontent.com/LxyoryxL/All-Img/master/lxy17761018921.github.io-img/%E4%BD%BF%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E6%9D%A5%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%98%9F%E5%88%97/%E9%98%9F%E5%88%97.png" alt></p><p>首先用一个数组来表示两个栈，stack1=[], stack2=[]</p><p><img src="https://raw.githubusercontent.com/LxyoryxL/All-Img/master/lxy17761018921.github.io-img/%E4%BD%BF%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E6%9D%A5%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%98%9F%E5%88%97/st1.png" alt><br><img src="https://raw.githubusercontent.com/LxyoryxL/All-Img/master/lxy17761018921.github.io-img/%E4%BD%BF%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E6%9D%A5%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%98%9F%E5%88%97/st2.png" alt></p><p>我们要完成 push 操作只需要向 stack1 的栈顶 push 元素，而要实现队列的先进后出，就要借助 stack2,就像汉诺塔一样，从 stack1 栈顶 pop 出来的元素,一个一个 push 进 stack2,这就实现了一个翻转。原来在栈底的‘1’，跑到了栈顶，于是就可以把先进入 stack1 的‘1’，先从 stack2 中 pop 出去。<br>下图是把栈 1 中的元素依次插入到栈 2 中，然后依次弹出栈：<br><img src="https://github.com/LxyoryxL/All-Img/blob/master/lxy17761018921.github.io-img/%E4%BD%BF%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E6%9D%A5%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%98%9F%E5%88%97/5.png?raw=true" alt></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token punctuation">{</span>  stack1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>stack2<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>stack1<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token keyword">null</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token keyword">var</span> len <span class="token operator">=</span> stack1<span class="token punctuation">.</span>length      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        stack2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>stack1<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>      <span class="token keyword">return</span> stack2<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> stack2<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">var</span> stack1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  stack2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/dangzhangjing97/article/details/81477192" target="_blank" rel="noopener">面试题：使用两个栈来实现一个队列</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cookie, Session, LocalStorage , SessionStorage</title>
      <link href="/2019/07/27/Cookie-Session-LocalStorage-SessionStorage/"/>
      <url>/2019/07/27/Cookie-Session-LocalStorage-SessionStorage/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> cookie session LocalStorage SessionStorage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>踩坑</title>
      <link href="/2019/07/20/%E8%B8%A9%E5%9D%91%E9%9B%86%E5%90%88/"/>
      <url>/2019/07/20/%E8%B8%A9%E5%9D%91%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<p><strong>1.Vue 报错如下</strong></p><img src="https://github.com/LxyoryxL/All-Img/blob/master/lxy17761018921.github.io-img/%E8%B8%A9%E5%9D%91/1.png?raw=true"><p>提示应该是 开启了 eslint 编码规范检查,于是准备关闭 eslint 来解决</p><p><strong>vue-cli 脚手架关闭 eslint 的步骤：</strong></p><ol><li>找到<code>bulid/webpack.base.conf.js</code>文件，<code>config/index.js</code>文件</li><li>注释掉 eslint 相关配置，比如：</li></ol><ul><li><p>webpack.base.conf.js 里</p><img src="https://github.com/LxyoryxL/All-Img/blob/master/lxy17761018921.github.io-img/%E8%B8%A9%E5%9D%91/1-1.png?raw=true"><img src="https://github.com/LxyoryxL/All-Img/blob/master/lxy17761018921.github.io-img/%E8%B8%A9%E5%9D%91/1-2.png?raw=true"></li><li><p>config/index.js 里配置 useEslint: false</p><img src="https://github.com/LxyoryxL/All-Img/blob/master/lxy17761018921.github.io-img/%E8%B8%A9%E5%9D%91/1-3.png?raw=true"></li></ul>]]></content>
      
      
      <categories>
          
          <category> 踩坑集合 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑 Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动端的适配如何做？</title>
      <link href="/2019/07/19/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84%E9%80%82%E9%85%8D/"/>
      <url>/2019/07/19/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84%E9%80%82%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="一-介绍"><a href="#一-介绍" class="headerlink" title="一.介绍"></a>一.介绍</h2><p>由于在不同尺寸的手机下，如果使用 px 来设置内容的样式，会出现文字过小，或者内容过大无法全部显示在视口等不适配问题。所以做手机端的适配就显得尤为重要。<br>下面介绍几种移动端适配的方法：</p><h2 id="二-viewport"><a href="#二-viewport" class="headerlink" title="二. viewport"></a>二. viewport</h2><h4 id="viewport-视口（设置理想视口）"><a href="#viewport-视口（设置理想视口）" class="headerlink" title="viewport 视口（设置理想视口）"></a><strong>viewport 视口（设置理想视口）</strong></h4><p>大部分人都知道做移动端适配，可以在 <code>&lt;head&gt;&lt;/head&gt;</code> 中添加：<br><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1,user-scalable=0&quot;&gt;</code>，可是你知道其中指定的属性的具体含义吗？比如为什么要设置<code>width=device-width</code>,为什么<code>user-scalable</code>要等于 0？要想理解的话，我就先从 viewport 视口分类开始讲：</p><pre><code>viewport 分为:    visual viewport 可视视口    layout viewport 布局视口    ideal  viewport 理想视口</code></pre><p><strong>visual 视口</strong><br>visual 视口指的是可见视口</p><div align="center">  <img src="https://raw.githubusercontent.com/LxyoryxL/All-Img/master/lxy17761018921.github.io-img/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84%E9%80%82%E9%85%8D/visual-viewport.png"></div><p><strong>layout 视口</strong><br>layout 视口指的是页面实际渲染出来的整个页面，可能会超出可见视口，出现滚动条。</p><div align="center">  <img src="https://raw.githubusercontent.com/LxyoryxL/All-Img/master/lxy17761018921.github.io-img/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84%E9%80%82%E9%85%8D/layout-viewport.png"></div><p><strong>ideal 视口</strong><br>ideal 视口等于移动设备的屏幕宽度，并没有一个固定尺寸，不同设备就不同</p><div align="center">  <img src="https://raw.githubusercontent.com/LxyoryxL/All-Img/master/lxy17761018921.github.io-img/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84%E9%80%82%E9%85%8D/ideal-viewport.png"></div><p>有了上面的视口概念介绍，我们可以初步分析得到: 因为移动设备的默认的 viewport 是 layout viewport ,那个比屏幕宽的 viewport,我们只要把屏幕宽度设定为 ideal viewport，即可实现移动端适配：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span>  <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span><span class="token punctuation">'</span>device-width,initial-scale<span class="token punctuation">=</span>1.0,maximum-scale<span class="token punctuation">=</span>1.0,user-scalable<span class="token punctuation">=</span>0<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><p>以上 meta 标签的作用其实就是把 视口宽度=设备宽度（<code>width=&#39;device-width</code>），不允许用户缩放（<code>user-scalable=0</code>）</p><h2 id="三-Rem"><a href="#三-Rem" class="headerlink" title="三. Rem"></a>三. Rem</h2><p>说 rem 单位，就不得不说下 px,em 了。<br>px:像素<br>rem:相对于 html 根元素的 font-size<br>em:相对于当前元素的 font-size（有很多文章写是相对于父元素，其实是错的）<br>根据 rem 的特点，我们可以动态设置根元素的 font-size,使得以 rem 为单位的元素在不同设备下有相同的效果去呈现。</p><h2 id="四-flex-布局"><a href="#四-flex-布局" class="headerlink" title="四. flex 布局"></a>四. flex 布局</h2><h2 id="五-vm-vh"><a href="#五-vm-vh" class="headerlink" title="五. vm/vh"></a>五. vm/vh</h2><h2 id="六-参考"><a href="#六-参考" class="headerlink" title="六. 参考"></a>六. 参考</h2><p><a href="https://segmentfault.com/a/1190000008767416" target="_blank" rel="noopener">移动端适配总结</a><br><a href="https://www.cnblogs.com/2050/p/3877280.html" target="_blank" rel="noopener">移动前端开发之 viewport 的深入理解</a></p>]]></content>
      
      
      <categories>
          
          <category> 移动端适配 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> viewport视口 rem </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>空元素是什么？可替换元素又是什么？</title>
      <link href="/2019/07/16/%E7%A9%BA%E5%85%83%E7%B4%A0%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E5%8F%AF%E6%9B%BF%E6%8D%A2%E5%85%83%E7%B4%A0%E5%8F%88%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
      <url>/2019/07/16/%E7%A9%BA%E5%85%83%E7%B4%A0%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F%E5%8F%AF%E6%9B%BF%E6%8D%A2%E5%85%83%E7%B4%A0%E5%8F%88%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="一-空元素"><a href="#一-空元素" class="headerlink" title="一. 空元素"></a>一. 空元素</h2><h3 id="空元素的含义"><a href="#空元素的含义" class="headerlink" title="空元素的含义"></a><strong>空元素的含义</strong></h3><p>用我的话说来解释空元素，就是不存在子节点（文字节点呀之类的），没有内容的元素。而且空元素是自封闭标签，比如：<code>&lt;br/&gt;</code></p><p>再比如：<br>那些非空标签都能在里面嵌套子元素：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p>而空元素就不能这样写:<code>&lt;hr &lt;a&gt;&lt;/a&gt; /&gt;</code> ×<br>如果想试图使用一个闭标签，也是错误的：<code>&lt;hr&gt; &lt;a&gt;&lt;/a&gt; &lt;hr/&gt;</code> ×</p><h3 id="列举几个常见的空元素："><a href="#列举几个常见的空元素：" class="headerlink" title="列举几个常见的空元素："></a><strong>列举几个常见的空元素：</strong></h3><ul><li><code>&lt;br/&gt;</code></li><li><code>&lt;hr/&gt;</code></li><li><code>&lt;input/&gt;</code></li><li><code>&lt;img/&gt;</code></li><li><code>&lt;source/&gt;</code></li><li><code>&lt;link/&gt;</code></li><li><code>&lt;meta/&gt;</code></li></ul><h2 id="二-可替换元素"><a href="#二-可替换元素" class="headerlink" title="二. 可替换元素"></a>二. 可替换元素</h2><p>我们都知道元素标签分为行内元素，块元素，还有行内块元素，可你还知道有可替换元素这一类吗？</p><p>其实平时我们常用到的标签 <code>&lt;img/&gt;</code> 就是个可替换元素标签。标签 <code>&lt;img/&gt;</code> 是行内元素，在使用 img 的时候我们会发现其实是可以修改它的宽高的，这是为什么呢？是因为可替换元素（在这儿是 img 元素）在其显示中生成了框，这就是有些内联元素能够设置宽高的原因。</p><h3 id="可替换元素的含义"><a href="#可替换元素的含义" class="headerlink" title="可替换元素的含义"></a><strong>可替换元素的含义</strong></h3><p>在 mdn 上的解释是这样的：<br>在 CSS 中，可替换元素（replaced element）的展现效果不是由 CSS 来控制的。简单来说，它们的内容不受当前文档的样式的影响。CSS 可以影响可替换元素的位置，但不会影响到可替换元素自身的内容。</p><p>我的理解是，这些可替换元素的样式可以由标签本身来决定（比如<code>&lt;img/&gt;</code>的图片），不是由自己写的 css 来控制的。也就是浏览器根据元素的标签和属性，来决定元素的具体显示内容。</p><p>我举个例子来解释：<br>比如 <code>&lt;img/&gt;</code> 标签的图片就是由 src 控制，图片是可替换的。<br>再比如 <code>&lt;video/&gt;</code> 标签的 音频由 src 控制，音频是可替换的。</p><h3 id="以下列举几个常见的可替换元素"><a href="#以下列举几个常见的可替换元素" class="headerlink" title="以下列举几个常见的可替换元素"></a><strong>以下列举几个常见的可替换元素</strong></h3><ul><li><code>&lt;img/&gt;</code></li><li><code>&lt;input/&gt;</code></li><li><code>&lt;textarea/&gt;</code></li><li><code>&lt;select/&gt;</code></li><li><code>&lt;canvas/&gt;</code></li><li><code>&lt;audio/&gt;</code></li><li><code>&lt;video/&gt;</code></li></ul><h2 id="三-参考链接"><a href="#三-参考链接" class="headerlink" title="三.参考链接"></a>三.参考链接</h2><p><a href="https://www.cnblogs.com/lalong/p/9330609.html" target="_blank" rel="noopener">https://www.cnblogs.com/lalong/p/9330609.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 元素标签 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 空元素  可替换元素  html  标签 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决单行或者多行文本溢出的方法总结</title>
      <link href="/2019/07/08/%E8%A7%A3%E5%86%B3%E5%8D%95%E8%A1%8C%E6%88%96%E8%80%85%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E7%9A%84%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
      <url>/2019/07/08/%E8%A7%A3%E5%86%B3%E5%8D%95%E8%A1%8C%E6%88%96%E8%80%85%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E7%9A%84%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>本文总结了：<br>‘列表文字太多,溢出使用省略号’ 的解决方法<br>包括单行文字溢出，多行文本溢出，主要使用 css 来做</p><a id="more"></a><h3 id="一-前言"><a href="#一-前言" class="headerlink" title="一. 前言"></a>一. 前言</h3><p>今天再写页面的时候，看到几行文字，感觉这部分的文字在这个部分显得很冗余，而且因为文字长度的不确定性，还容易影响布局。</p><p>然后我查看了下百度新闻的网页，发现他们都是用对文字溢出做了处理，显示的文字内容多少有规定，末尾用省略号代替。</p><blockquote><p><img src="https://raw.githubusercontent.com/lxy17761018921/All-Img/master/lxy17761018921.github.io-img/%E8%A7%A3%E5%86%B3%E5%8D%95%E8%A1%8C%E6%88%96%E8%80%85%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E7%9A%84%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/baidu_news.png" alt="baidu_news"></p></blockquote><p>于是就搜了下‘列表文字太多,溢出使用省略号’的解决方法，本文就此进行总结。</p><br><h3 id="二-单行文本溢出"><a href="#二-单行文本溢出" class="headerlink" title="二. 单行文本溢出"></a>二. 单行文本溢出</h3><p>主要使用 <code>text-overflow</code> 属性，具体使用如下：</p><pre class=" language-css"><code class="language-css"><span class="token property">over-flow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span><span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span></code></pre><blockquote><p><img src="https://raw.githubusercontent.com/lxy17761018921/All-Img/master/lxy17761018921.github.io-img/%E8%A7%A3%E5%86%B3%E5%8D%95%E8%A1%8C%E6%88%96%E8%80%85%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E7%9A%84%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/%E5%8D%95%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA.png" alt="单行"></p></blockquote><br><h3 id="三-多行文本溢出"><a href="#三-多行文本溢出" class="headerlink" title="三. 多行文本溢出"></a>三. 多行文本溢出</h3><h5 id="方法一-使用-webkit-line-clamp-属性"><a href="#方法一-使用-webkit-line-clamp-属性" class="headerlink" title="方法一. 使用 -webkit-line-clamp 属性"></a>方法一. 使用 -webkit-line-clamp 属性</h5><p>-webkit-line-clamp 属性限制块元素显示的文本行数，但它是一个不规范的属性，它没有在 CSS 的规范草案中。该方法主要适用与 webkit 内核的浏览器或移动端,firefox 不适用。具体使用如下：</p><pre class=" language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span><span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></code></pre><br><p>这是在 chrome 里的结果：</p><blockquote><p><img src="https://raw.githubusercontent.com/lxy17761018921/lxy17761018921.github.io/master/2019/07/08/%E8%A7%A3%E5%86%B3%E5%8D%95%E8%A1%8C%E6%88%96%E8%80%85%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E7%9A%84%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA.png" alt="chrome 多行"></p></blockquote><br><p>这是在 firefox 里的结果（不支持）：</p><blockquote><p><img src="https://github.com/lxy17761018921/All-Img/blob/master/lxy17761018921.github.io-img/%E8%A7%A3%E5%86%B3%E5%8D%95%E8%A1%8C%E6%88%96%E8%80%85%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E7%9A%84%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA.png?raw=true" alt="firefox 多行"></p></blockquote><br><h5 id="方法二-使用-after-伪元素"><a href="#方法二-使用-after-伪元素" class="headerlink" title="方法二.使用 after 伪元素"></a>方法二.使用 after 伪元素</h5><p>使用伪元素在元素，在文字最后添加省略号 ‘…’，这是一个比较简单靠谱的做法，兼容性较好</p><pre class=" language-css"><code class="language-css"><span class="token selector">xx<span class="token pseudo-element">::after</span> </span><span class="token punctuation">{</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"..."</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><blockquote><p><img src="https://github.com/lxy17761018921/All-Img/blob/master/lxy17761018921.github.io-img/%E8%A7%A3%E5%86%B3%E5%8D%95%E8%A1%8C%E6%88%96%E8%80%85%E5%A4%9A%E8%A1%8C%E6%96%87%E6%9C%AC%E6%BA%A2%E5%87%BA%E7%9A%84%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/%E5%A4%9A%E8%A1%8C%E7%81%AB%E7%8B%90.png?raw=true" alt="伪元素 多行"></p></blockquote><br><h3 id="四-总结"><a href="#四-总结" class="headerlink" title="四. 总结"></a>四. 总结</h3><p>解决文本溢出的方法很多，最好不使用 -webkit-line-clamp 属性 的方式，推荐使用伪元素方法和 js 的方法<br>这是附上我的测试 demo:</p><p class="codepen" data-height="400" data-theme-id="0" data-default-tab="html,result" data-user="lxyoryxl" data-slug-hash="mNJGWQ" style="height: 737px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="文字溢出处理">  <span>See the Pen <a href="https://codepen.io/lxyoryxl/pen/mNJGWQ/" target="_blank" rel="noopener">  文字溢出处理</a> by lxy (<a href="https://codepen.io/lxyoryxl" target="_blank" rel="noopener">@lxyoryxl</a>)  on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</span></p><script async src="https://static.codepen.io/assets/embed/ei.js"></script><br><h3 id="五-参考链接"><a href="#五-参考链接" class="headerlink" title="五. 参考链接"></a>五. 参考链接</h3><p><a src="https://www.zhangxinxu.com/wordpress/2009/09/%E5%85%B3%E4%BA%8E%E6%96%87%E5%AD%97%E5%86%85%E5%AE%B9%E6%BA%A2%E5%87%BA%E7%94%A8%E7%82%B9%E7%82%B9%E7%82%B9-%E7%9C%81%E7%95%A5%E5%8F%B7%E8%A1%A8%E7%A4%BA/comment-page-1/">关于文字内容溢出用点点点(…)省略号表示</a></p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单行文本溢出 多行文本溢出 css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>总结水平居中和垂直居中</title>
      <link href="/2019/07/08/%E6%80%BB%E7%BB%93%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E5%92%8C%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/"/>
      <url>/2019/07/08/%E6%80%BB%E7%BB%93%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E5%92%8C%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/</url>
      
        <content type="html"><![CDATA[<p>本文总结：<br>几种水平居中和垂直居中的方法<br>flex 布局 css3 的 width 新出的属性值 fit-content …</p><a id="more"></a><h3 id="一-水平居中"><a href="#一-水平居中" class="headerlink" title="一. 水平居中"></a>一. 水平居中</h3><h5 id="1-行内元素水平居中"><a href="#1-行内元素水平居中" class="headerlink" title="1. 行内元素水平居中"></a>1. <strong>行内元素水平居中</strong></h5><p>1.1 <strong>text-align:center</strong></p><p>给父元素设置 <code>text-align:center</code></p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box1</span> </span><span class="token punctuation">{</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>行内元素p<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><blockquote><p><img src="https://raw.githubusercontent.com/lxy17761018921/All-Img/master/lxy17761018921.github.io-img/%E6%80%BB%E7%BB%93%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E5%92%8C%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E5%B1%85%E4%B8%AD.png" alt="行内元素居中"></p></blockquote><br><h5 id="2-块级元素水平居中"><a href="#2-块级元素水平居中" class="headerlink" title="2. 块级元素水平居中"></a>2. <strong>块级元素水平居中</strong></h5><p>2.1 <strong>margin:0 auto</strong><br>给要居中的块级元素加 <code>margin:0 auto</code>, 注意：该块元素一定要指定宽度</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box2</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span> //这里一定要指定宽度  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid red<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><blockquote><p><img src="https://github.com/lxy17761018921/All-Img/blob/master/lxy17761018921.github.io-img/%E6%80%BB%E7%BB%93%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E5%92%8C%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/%E5%AE%9A%E5%AE%BD%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD.png?raw=true" alt="定宽块级元素水平居中"></p></blockquote><br><p>2.2 <strong>display:flex</strong><br>使用弹性盒子布局，给父元素设置 <code>display:flex</code> <code>justify-content: center</code>,使子元素居中</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box3</span> </span><span class="token punctuation">{</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid black<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background</span><span class="token punctuation">:</span> darkcyan</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>p元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background</span><span class="token punctuation">:</span> chocolate</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>span元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>blue</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>div元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><blockquote><p><img src="https://raw.githubusercontent.com/lxy17761018921/All-Img/master/lxy17761018921.github.io-img/%E6%80%BB%E7%BB%93%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E5%92%8C%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/flex.png" alt="flex"></p></blockquote><br><p>2.3 <strong>已知宽度，用 positon</strong><br>前提是已知宽度，要居中的元素加 <code>position: absolute</code> <code>left: 50%</code> <code>margin-left: -50px</code></p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box4</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">50</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><blockquote><p><img src="https://raw.githubusercontent.com/lxy17761018921/All-Img/master/lxy17761018921.github.io-img/%E6%80%BB%E7%BB%93%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E5%92%8C%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/%E5%B7%B2%E7%9F%A5%E5%AE%BD%E5%BA%A6%2Cpositon.png" alt="已知宽度,positon"></p></blockquote><br><p>2.4 <strong>未知宽度，用 positon，transfrom 结合</strong><br>对于未知宽度的块元素要实现居中，对该元素添加<code>position: absolute</code> <code>left: 50%</code> <code>transform: translate(-50%, 0)</code><br>这种方法其实不太推荐，因为 transform 在各个浏览器中的表现行为不一致，有兼容性问题</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box5</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> peru<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><blockquote><p><img src="https://raw.githubusercontent.com/lxy17761018921/All-Img/master/lxy17761018921.github.io-img/%E6%80%BB%E7%BB%93%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E5%92%8C%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/%E6%9C%AA%E7%9F%A5%E5%AE%BD%E5%BA%A6%EF%BC%8C%E7%94%A8%20positon.png" alt="未知宽度，用 positon"></p></blockquote><br><p>2.5 <strong>fit-content</strong><br>该属性是 CSS3 中 width 属性新加 的一个属性值，它配合 <code>margin:auto</code> 可以轻松实现居中效果。可以在不设置具体宽度的情况下，直接给要居中的元素设置 <code>width:fit-content</code> <code>margin:auto</code> 达到居中效果</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box6</span> </span><span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> fit-content<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>234<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><blockquote><p><img src="https://raw.githubusercontent.com/lxy17761018921/All-Img/master/lxy17761018921.github.io-img/%E6%80%BB%E7%BB%93%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E5%92%8C%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/fit-content.png" alt="fit-content"></p></blockquote><br><h3 id="二-垂直居中"><a href="#二-垂直居中" class="headerlink" title="二. 垂直居中"></a>二. 垂直居中</h3><h5 id="1-文字的居中"><a href="#1-文字的居中" class="headerlink" title="1. 文字的居中"></a>1. <strong>文字的居中</strong></h5><p>1.1 <strong>line-height</strong><br>这个属性主要用在单行文字的垂直居中，只要将行高（<code>line-height</code>）与容器高（<code>height</code>）设为相等即可</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box7</span> </span><span class="token punctuation">{</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid black<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>23412341<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><blockquote><p><img src="https://raw.githubusercontent.com/lxy17761018921/All-Img/master/lxy17761018921.github.io-img/%E6%80%BB%E7%BB%93%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E5%92%8C%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/%E5%9E%82%E7%9B%B4-line-height.png" alt="垂直-line-height"></p></blockquote><br><h5 id="2-容器的居中"><a href="#2-容器的居中" class="headerlink" title="2. 容器的居中"></a>2. <strong>容器的居中</strong></h5><p>2.1 <strong>position,margin-top,top</strong><br>已知容器高度，利用 position,margin-top,top</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box8</span> </span><span class="token punctuation">{</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid black<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.b8</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid red<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> -<span class="token number">25</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>b8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>sfdsfs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><blockquote><p><img src="https://github.com/lxy17761018921/All-Img/blob/master/lxy17761018921.github.io-img/%E6%80%BB%E7%BB%93%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E5%92%8C%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/%E5%9E%82%E7%9B%B4-position-margintop.png?raw=true" alt="垂直-position-margintop"></p></blockquote><br><p>2.2 <strong>position,transform,top</strong><br>未知容器高度，利用 position,transform,top</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box9</span> </span><span class="token punctuation">{</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid black<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.b9</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid blue<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span>, -<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box9<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>b9<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>阿斯蒂芬萨芬<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><blockquote><p><img src="https://github.com/lxy17761018921/All-Img/blob/master/lxy17761018921.github.io-img/%E6%80%BB%E7%BB%93%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E5%92%8C%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/%E5%9E%82%E7%9B%B4-position-transform.png?raw=true" alt="垂直-position-transform"></p></blockquote><br><p>2.3 <strong>flex</strong><br>利用弹性布局，父元素设置<code>display:flex</code> <code>align-items:center</code></p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.box10</span> </span><span class="token punctuation">{</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid black<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background</span><span class="token punctuation">:</span> blue</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>sdfsf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background</span><span class="token punctuation">:</span> brown</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>888888<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><blockquote><p><img src="https://github.com/lxy17761018921/All-Img/blob/master/lxy17761018921.github.io-img/%E6%80%BB%E7%BB%93%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E5%92%8C%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/%E5%9E%82%E7%9B%B4-flex.png?raw=true" alt="垂直-flex"></p></blockquote><br><h3 id="三-总结"><a href="#三-总结" class="headerlink" title="三. 总结"></a>三. 总结</h3><p>总的来说，设置水平居中和垂直居中的方法太多了，我就列举了我比较常用的几个。但是以后还是首选 flex 布局的方式，感觉超级好用。<br>最后附上测试 demo:</p><p class="codepen" data-height="507" data-theme-id="0" data-default-tab="css,result" data-user="lxyoryxl" data-slug-hash="eqNLKW" style="height: 507px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="水平居中和垂直居中">  <span>See the Pen <a href="https://codepen.io/lxyoryxl/pen/eqNLKW/" target="_blank" rel="noopener">  水平居中和垂直居中</a> by lxy (<a href="https://codepen.io/lxyoryxl" target="_blank" rel="noopener">@lxyoryxl</a>)  on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</span></p><script async src="https://static.codepen.io/assets/embed/ei.js"></script><h3 id="四-参考链接"><a href="#四-参考链接" class="headerlink" title="四. 参考链接"></a>四. 参考链接</h3><p><a href="https://segmentfault.com/a/1190000014116655" target="_blank" rel="noopener">CSS-水平居中、垂直居中、水平垂直居中</a><br><a href="https://jingyan.baidu.com/article/86112f1381081127379787bb.html" target="_blank" rel="noopener">CSS 水平居中的 9 种方法</a></p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flex fit-content transform </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Git + Github Pages + Hexo免费搭建自己的博客（简明教程）</title>
      <link href="/2019/07/07/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%88hexo-githubpages%EF%BC%89/"/>
      <url>/2019/07/07/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%88hexo-githubpages%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>本文介绍：<br>使用 Git + Github Pages + Hexo 搭建免费博客<br>部署到 github 上<br>简明的操作步骤</p><a id="more"></a><h2 id="一-前言"><a href="#一-前言" class="headerlink" title="一. 前言"></a>一. 前言</h2><p>由于 Hexo 官方文档写的不是好，还有网上写的一些关于 Hexo 搭建博客的文章都比较容易踩坑，于是写一篇比较简明的用 Hexo 搭建个人博客的文章。</p><br><h2 id="二-为什么使用-Hexo"><a href="#二-为什么使用-Hexo" class="headerlink" title="二. 为什么使用 Hexo"></a>二. 为什么使用 Hexo</h2><p>Hexo 是一款基于 Node.js 的静态博客框架，依赖少易于安装，可以方便的生成静态网页托管在 GitHub 上。</p><ul><li>免费 托管在 GitHub</li><li>简洁 支持 Markdown</li></ul><br><h2 id="三-Hexo-工作机制"><a href="#三-Hexo-工作机制" class="headerlink" title="三. Hexo 工作机制"></a>三. Hexo 工作机制</h2><p>Hexo 基于 Node.js,将 source 文件夹下的资源（如_posts 文章等），按照预定的配置文件（_config.yml），转换成静态页面放到 public 目录下。于是当我们预览或者部署时，Hexo 会把 public 作为 web 目录处理。</p><br><h2 id="四-搭建流程"><a href="#四-搭建流程" class="headerlink" title="四. 搭建流程"></a>四. 搭建流程</h2><h3 id="1-安装-Git"><a href="#1-安装-Git" class="headerlink" title="1. 安装 Git"></a>1. 安装 Git</h3><ul><li>官网下载：<a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></li></ul><p>如果想要详细了解下 Git 推荐看廖雪峰的 Git 教程（简洁明了）：<a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/896043488029600</a></p><h3 id="2-安装-Node-js"><a href="#2-安装-Node-js" class="headerlink" title="2. 安装 Node.js"></a>2. 安装 Node.js</h3><ul><li>官网下载：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></li><li>安装：直接默认路径，全部点继续就好</li><li>查看：在命令行输 <code>node -v</code> <code>npm -v</code> 查看安装是否安装上</li></ul><h3 id="3-安装-Hexo"><a href="#3-安装-Hexo" class="headerlink" title="3. 安装 Hexo"></a>3. 安装 Hexo</h3><ul><li>安装：命令行输入 <code>npm install -g hexo-cli</code></li><li>查看：命令行输入 <code>hexo -v</code></li></ul><h3 id="4-使用-Hexo"><a href="#4-使用-Hexo" class="headerlink" title="4.使用 Hexo"></a>4.使用 Hexo</h3><h4 id="新建-blog"><a href="#新建-blog" class="headerlink" title="新建 blog"></a>新建 blog</h4><blockquote><ol><li>在 D 盘新建 blogg 目录，在该目录下打开 gitbush</li><li><code>hexo init</code> [文件名]，然后进入该文件，再打开 gitbush</li><li>启动：<code>hexo s</code><br>接着就可以通过默认的 <code>localhost:4000</code> 预览博客页面</li></ol></blockquote><h4 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h4><blockquote><ol><li><code>hexo n</code> “我的第一篇博客”</li><li>查看：进入到 source/_posts ,查看是否有“我的第一篇博客<code>.md</code>”</li><li>修改添加内容：用 <code>vscode</code> 或者 <code>Notepad++</code>等工具对<code>.md</code> 文件进行编辑</li><li>生成：<code>hexo g</code></li><li>启动：<code>hexo s</code></li></ol></blockquote><h4 id="博客部署到-GitHub-上"><a href="#博客部署到-GitHub-上" class="headerlink" title="博客部署到 GitHub 上"></a>博客部署到 GitHub 上</h4><p>为了使博客不仅仅是在本地访问，我将博客部署到 GitHub,首先就需要新建一个 GitHub 仓库</p><blockquote><p>新建一个 GitHub 仓库（注意该仓库的名字前缀必须和自己 GitHub 的 <code>username</code> 相同，后缀必须是 github.io）例如：lxy17761018921/lxy17761018921.github.io</p></blockquote><p>在部署之前需要安装一个插件 hexo-deployer-git</p><blockquote><p><code>npm install hexo-deployer-git --save</code></p></blockquote><p>然后做重要的是，配置 _config.yml 文件，此处有坑：冒号后面需要有个空格</p><pre class=" language-yml"><code class="language-yml"># Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repo: https://github.com/lxy17761018921/lxy17761018921.github.io  branch: master</code></pre><br><p>最后部署：注意，中间提示输入 GitHub 账号密码，必须手打，不能复制粘贴，不然有奇怪的符号</p><blockquote><p>hexo d</p></blockquote><p>最终可以输入 仓库名（lxy17761018921.github.io） 加载我们的博客</p><h4 id="自定义主题"><a href="#自定义主题" class="headerlink" title="自定义主题"></a>自定义主题</h4><p>一个方法是直接在 GitHubPages 里面，用它提供的主题。第二个方法是自己克隆别人的主题，这里我讲一下第二种方法的步骤。</p><p>在 GitHub 上 clone 他人的主题,并放到 theme 文件夹下：</p><blockquote><p><code>git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code></p></blockquote><p>接着还是配置 _config.yml 文件：</p><pre class=" language-yml"><code class="language-yml"># Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: yilia</code></pre><br><p>最后:生成，启动，部署, 就可以打开我们的博客查看网页的主题已经变了</p><blockquote><p><code>hexo g</code> &gt; <code>hexo s</code> &gt; <code>hexo d</code></p></blockquote><h3 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h3><p>以上就是我搭建一个博客的全部内容了，现暂时还没有贴图进去后面一定会加上的。这是我的第一篇博客，内容不足请多多包含。</p><h3 id="6-参考链接"><a href="#6-参考链接" class="headerlink" title="6. 参考链接"></a>6. 参考链接</h3><p><a href="https://www.bilibili.com/video/av44544186?from=search&amp;seid=10605979974887129883" target="_blank" rel="noopener">https://www.bilibili.com/video/av44544186?from=search&amp;seid=10605979974887129883</a></p>]]></content>
      
      
      <categories>
          
          <category> 搭建教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GithubPages Hexo Git 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scss 的常用语法（变量 嵌套规则  混合 父选择器&amp;）</title>
      <link href="/2019/07/06/Scss%E7%9A%84%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2019/07/06/Scss%E7%9A%84%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>本文总结：<br>Scss 的常用语法，包括变量 嵌套规则 父选择器&amp; 混合</p><a id="more"></a><h2 id="一-变量声明"><a href="#一-变量声明" class="headerlink" title="一. 变量声明"></a>一. 变量声明</h2><pre class=" language-scss"><code class="language-scss"><span class="token variable">$write</span>=<span class="token number">23</span><span class="token punctuation">;</span></code></pre><h2 id="二-嵌套规则"><a href="#二-嵌套规则" class="headerlink" title="二. 嵌套规则"></a>二. 嵌套规则</h2><p>例子：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token id">#content</span> article h1 </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#333</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#content</span> article p </span><span class="token punctuation">{</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">1.4</span>em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#content</span> aside </span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#eee</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>嵌套写</p><pre class=" language-scss"><code class="language-scss"><span class="token selector">#content </span><span class="token punctuation">{</span>  <span class="token selector">article </span><span class="token punctuation">{</span>    <span class="token selector">h1 </span><span class="token punctuation">{</span>      <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#333</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">p </span><span class="token punctuation">{</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">1.4</span>em<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token selector">aside </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#eee</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>编译后</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token id">#content</span> article h1 </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#333</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#content</span> article p </span><span class="token punctuation">{</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">1.4</span>em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#content</span> aside </span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#eee</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="三-父选择器-amp"><a href="#三-父选择器-amp" class="headerlink" title="三. 父选择器 &amp;"></a>三. 父选择器 &amp;</h2><p>&amp;=父选择器</p><pre class=" language-scss"><code class="language-scss"><span class="token selector">article a </span><span class="token punctuation">{</span>  <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>也就是</p><pre class=" language-css"><code class="language-css"><span class="token selector">article a<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="四-混合"><a href="#四-混合" class="headerlink" title="四. 混合"></a>四. 混合</h2><p>如果有大量重用的样式，用混合器处理是个好方法<br>使用 @mixin 标识符定义，@include 来使用这个混合器</p><pre class=" language-scss"><code class="language-scss"><span class="token keyword">@mixin</span> <span class="token selector">border-radius </span><span class="token punctuation">{</span>  <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">//声明混合宏border-radius</span><span class="token selector">button </span><span class="token punctuation">{</span>  <span class="token keyword">@include</span> border-radius<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">//调用混合宏border-radius</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Scss语法 变量 嵌套规则 父选择器&amp; 混合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 常用语法</title>
      <link href="/2019/07/04/Markdown-%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2019/07/04/Markdown-%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>本文总结:<br>Markdown 常用语法，包括 Markdown 标题 列表 区块引用 链接 字体 代码框</p><a id="more"></a><h2 id="一-标题写法"><a href="#一-标题写法" class="headerlink" title="一. 标题写法"></a><strong>一. 标题写法</strong></h2><pre><code># 一级标题## 二级标题### 三级标题#### 四级标题</code></pre><blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4></blockquote><p>注意，#号后面有空格</p><h2 id="二-无序列表"><a href="#二-无序列表" class="headerlink" title="二. 无序列表"></a><strong>二. 无序列表</strong></h2><pre><code>* 1* 2* 3</code></pre><blockquote><ul><li>1</li><li>2</li><li>3</li></ul></blockquote><h2 id="三-有序列表"><a href="#三-有序列表" class="headerlink" title="三. 有序列表"></a><strong>三. 有序列表</strong></h2><pre><code>4. 列表一4. 列表二5. 列表三</code></pre><blockquote><ol start="4"><li>列表一</li><li>列表二</li><li>列表三</li></ol></blockquote><p>注意，有序列表的序号是根据第一行列表的数字顺序来的</p><h2 id="四-区块引用"><a href="#四-区块引用" class="headerlink" title="四. 区块引用"></a><strong>四. 区块引用</strong></h2><pre><code>&gt;一级引用&gt;&gt;二级引用&gt;&gt;&gt;三级引用</code></pre><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p></blockquote></blockquote></blockquote><h2 id="五-链接"><a href="#五-链接" class="headerlink" title="五. 链接"></a><strong>五. 链接</strong></h2><h4 id="普通写法："><a href="#普通写法：" class="headerlink" title="普通写法："></a>普通写法：</h4><pre><code>[链接名](链接地址)</code></pre><blockquote><p><a href="http://www.baidu.com" target="_blank" rel="noopener">百度链接</a></p></blockquote><h4 id="加-title-属性的链接写法："><a href="#加-title-属性的链接写法：" class="headerlink" title="加 title 属性的链接写法："></a>加 title 属性的链接写法：</h4><pre><code>[链接名](链接地址 title名称)</code></pre><blockquote><p><a href="http://www.baidu.com" title="ss" target="_blank" rel="noopener">百度链接</a></p></blockquote><h4 id="图片的链接写法："><a href="#图片的链接写法：" class="headerlink" title="图片的链接写法："></a>图片的链接写法：</h4><ul><li>写法一：</li></ul><pre><code>![链接名](链接地址)</code></pre><blockquote><p><img src="http://www.baidu.com" alt="我是图片"></p></blockquote><ul><li>写法二：</li></ul><p>使用 <code>&lt;img /&gt;</code>标签来贴图，然后指定 align 属性</p><pre><code>&lt;img align=&quot;right&quot; src=&quot;https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/markdown/demo.png&quot;/&gt;</code></pre><p>刷屏行。<br>刷屏行。<br><img align="right" src="https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/markdown/demo.png"><br><strong>效果如右边 —-&gt;</strong><br>刷屏行。<br>刷屏行。<br>刷屏行。<br>刷屏行。<br>刷屏行。</p><br><ul><li>两种写法的比较：</li></ul><p>标准的 Markdown 图片标记 <img src alt> 无法指定图片的大小和位置，只能依赖默认的图片大小，默认居左。<br>下面是两个种写法的比较：</p><pre class=" language-html"><code class="language-html">**图片默认显示效果：**![](https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/markdown/demo.png)**加以控制后的效果：**<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>    <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>65<span class="token punctuation">"</span></span>    <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>75<span class="token punctuation">"</span></span>    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/markdown/demo.png<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><p>示例效果：</p><p><strong>图片默认显示效果：</strong><br><img src="https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/markdown/demo.png" alt></p><p><strong>加以控制后的效果：</strong></p><div align="center">  <img width="65" height="75" src="https://raw.githubusercontent.com/mzlogin/mzlogin.github.io/master/images/posts/markdown/demo.png"></div><h2 id="六-代码框"><a href="#六-代码框" class="headerlink" title="六.代码框"></a><strong>六.代码框</strong></h2><h4 id="1-单行用"><a href="#1-单行用" class="headerlink" title="1. 单行用 ``"></a>1. 单行用 ``</h4><pre><code>    `&lt;p&gt;&lt;a href=&#39;/home&#39; title=&#39;说明&#39;&gt;&lt;/a&gt;&lt;/p&gt;`</code></pre><blockquote><p><code>&lt;p&gt;&lt;a href=&#39;/home&#39; title=&#39;说明&#39;&gt;&lt;/a&gt;&lt;/p&gt;</code></p></blockquote><h4 id="2-多行用-三个点点点"><a href="#2-多行用-三个点点点" class="headerlink" title="2. 多行用 三个点点点"></a>2. 多行用 三个点点点</h4><pre><code>    ```    &lt;p&gt;&lt;a href=&#39;/home&#39; title=&#39;说明&#39;&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;&lt;a href=&#39;/home&#39; title=&#39;说明&#39;&gt;&lt;/a&gt;&lt;/p&gt;    &lt;p&gt;&lt;a href=&#39;/home&#39; title=&#39;说明&#39;&gt;&lt;/a&gt;&lt;/p&gt;    ```</code></pre><pre><code>&lt;p&gt;&lt;a href=&#39;/home&#39; title=&#39;说明&#39;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&#39;/home&#39; title=&#39;说明&#39;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&#39;/home&#39; title=&#39;说明&#39;&gt;&lt;/a&gt;&lt;/p&gt;</code></pre><h4 id="3-多行用-三个"><a href="#3-多行用-三个" class="headerlink" title="3. 多行用 三个~"></a>3. 多行用 三个~</h4><pre><code>    ~~~html    &lt;p v-if=&#39;seen&#39;&gt;真就显示，假不显示&lt;/p&gt;    ~~~</code></pre><p>以上加上 html 显示更贴近 html 的彩色 code</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>seen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>真就显示，假不显示<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><h3 id="4-两个以上的-Tab"><a href="#4-两个以上的-Tab" class="headerlink" title="4. 两个以上的 Tab"></a>4. 两个以上的 Tab</h3><p>用 2 个以上 TAB 键起始的段落，会被认为是代码块，效果如下：</p><pre><code>  代码块测试，代码块测试  代码块测试，代码块测试  代码块测试，代码块测试  代码块测试，代码块测试  代码块测试，代码块测试</code></pre><h3 id="5-代码框颜色"><a href="#5-代码框颜色" class="headerlink" title="5. 代码框颜色"></a>5. 代码框颜色</h3><p>借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色的功能。举例如下：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#fedfe1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>测试代码框背景色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><p>效果如下：</p><table>  <tr>    <td bgcolor="#fedfe1">测试代码框背景色</td>  </tr></table><br><h2 id="七-强调"><a href="#七-强调" class="headerlink" title="七.强调"></a><strong>七.强调</strong></h2><h4 id="字体倾斜"><a href="#字体倾斜" class="headerlink" title="字体倾斜"></a>字体倾斜</h4><pre><code>_字体倾斜_</code></pre><blockquote><p><em>字体倾斜</em></p></blockquote><h4 id="字体加粗"><a href="#字体加粗" class="headerlink" title="字体加粗"></a>字体加粗</h4><pre><code>__字体加粗__</code></pre><blockquote><p><strong>字体加粗</strong></p></blockquote><h2 id="八-删除"><a href="#八-删除" class="headerlink" title="八.删除"></a><strong>八.删除</strong></h2><h4 id="删除线"><a href="#删除线" class="headerlink" title="删除线 ~~"></a>删除线 ~~</h4><pre><code>~~请删掉我吧~~</code></pre><blockquote><p><del>请删掉我吧</del></p></blockquote><h2 id="九-换行"><a href="#九-换行" class="headerlink" title="九.换行"></a><strong>九.换行</strong></h2><p>直接在要换行的语句最后打上 2 个空格。</p><pre><code>我是测试</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a><strong>参考</strong></h2><p><a href="https://mazhuang.org/2017/09/01/markdown-odd-skills/" target="_blank" rel="noopener">https://mazhuang.org/2017/09/01/markdown-odd-skills/</a><br><a href="https://www.zybuluo.com/songpfei/note/247346" target="_blank" rel="noopener">https://www.zybuluo.com/songpfei/note/247346</a></p>]]></content>
      
      
      <categories>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown 标题 列表 区块引用 链接 字体 代码框 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
